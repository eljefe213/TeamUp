{"ast":null,"code":"import { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\nfunction createAnimate(AnimatePolyfill) {\n  return function animate(elements, keyframes) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    elements = resolveElements(elements);\n    const numElements = elements.length;\n    /**\n     * Create and start new animations\n     */\n    const animationFactories = [];\n    for (let i = 0; i < numElements; i++) {\n      const element = elements[i];\n      for (const key in keyframes) {\n        const valueOptions = getOptions(options, key);\n        valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n        const animation = animateStyle(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n        animationFactories.push(animation);\n      }\n    }\n    return withControls(animationFactories, options,\n    /**\n     * TODO:\n     * If easing is set to spring or glide, duration will be dynamically\n     * generated. Ideally we would dynamically generate this from\n     * animation.effect.getComputedTiming().duration but this isn't\n     * supported in iOS13 or our number polyfill. Perhaps it's possible\n     * to Proxy animations returned from animateStyle that has duration\n     * as a getter.\n     */\n    options.duration);\n  };\n}\nexport { createAnimate };","map":{"version":3,"names":["animateStyle","getOptions","resolveElements","withControls","resolveOption","createAnimate","AnimatePolyfill","animate","elements","keyframes","options","numElements","length","animationFactories","i","element","key","valueOptions","delay","animation","push","duration"],"sources":["C:/Users/Utilisateur/Desktop/front/node_modules/@motionone/dom/dist/animate/create-animate.es.js"],"sourcesContent":["import { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\n\nfunction createAnimate(AnimatePolyfill) {\n    return function animate(elements, keyframes, options = {}) {\n        elements = resolveElements(elements);\n        const numElements = elements.length;\n        /**\n         * Create and start new animations\n         */\n        const animationFactories = [];\n        for (let i = 0; i < numElements; i++) {\n            const element = elements[i];\n            for (const key in keyframes) {\n                const valueOptions = getOptions(options, key);\n                valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n                const animation = animateStyle(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n                animationFactories.push(animation);\n            }\n        }\n        return withControls(animationFactories, options, \n        /**\n         * TODO:\n         * If easing is set to spring or glide, duration will be dynamically\n         * generated. Ideally we would dynamically generate this from\n         * animation.effect.getComputedTiming().duration but this isn't\n         * supported in iOS13 or our number polyfill. Perhaps it's possible\n         * to Proxy animations returned from animateStyle that has duration\n         * as a getter.\n         */\n        options.duration);\n    };\n}\n\nexport { createAnimate };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,SAASC,aAAa,CAACC,eAAe,EAAE;EACpC,OAAO,SAASC,OAAO,CAACC,QAAQ,EAAEC,SAAS,EAAgB;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IACrDF,QAAQ,GAAGN,eAAe,CAACM,QAAQ,CAAC;IACpC,MAAMG,WAAW,GAAGH,QAAQ,CAACI,MAAM;IACnC;AACR;AACA;IACQ,MAAMC,kBAAkB,GAAG,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,EAAEG,CAAC,EAAE,EAAE;MAClC,MAAMC,OAAO,GAAGP,QAAQ,CAACM,CAAC,CAAC;MAC3B,KAAK,MAAME,GAAG,IAAIP,SAAS,EAAE;QACzB,MAAMQ,YAAY,GAAGhB,UAAU,CAACS,OAAO,EAAEM,GAAG,CAAC;QAC7CC,YAAY,CAACC,KAAK,GAAGd,aAAa,CAACa,YAAY,CAACC,KAAK,EAAEJ,CAAC,EAAEH,WAAW,CAAC;QACtE,MAAMQ,SAAS,GAAGnB,YAAY,CAACe,OAAO,EAAEC,GAAG,EAAEP,SAAS,CAACO,GAAG,CAAC,EAAEC,YAAY,EAAEX,eAAe,CAAC;QAC3FO,kBAAkB,CAACO,IAAI,CAACD,SAAS,CAAC;MACtC;IACJ;IACA,OAAOhB,YAAY,CAACU,kBAAkB,EAAEH,OAAO;IAC/C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQA,OAAO,CAACW,QAAQ,CAAC;EACrB,CAAC;AACL;AAEA,SAAShB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}