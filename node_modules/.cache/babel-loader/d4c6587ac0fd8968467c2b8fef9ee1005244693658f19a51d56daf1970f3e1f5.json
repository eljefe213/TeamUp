{"ast":null,"code":"import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to) {\n  let transition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const value = isMotionValue(from) ? from : motionValue(from);\n  value.start(createMotionValueAnimation(\"\", value, to, transition));\n  return {\n    stop: () => value.stop(),\n    isAnimating: () => value.isAnimating()\n  };\n}\nexport { animate };","map":{"version":3,"names":["createMotionValueAnimation","motionValue","isMotionValue","animate","from","to","transition","value","start","stop","isAnimating"],"sources":["C:/Users/Utilisateur/Desktop/front/node_modules/framer-motion/dist/es/animation/animate.mjs"],"sourcesContent":["import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,aAAa;AACxD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,aAAa,QAAQ,oCAAoC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAO,CAACC,IAAI,EAAEC,EAAE,EAAmB;EAAA,IAAjBC,UAAU,uEAAG,CAAC,CAAC;EACtC,MAAMC,KAAK,GAAGL,aAAa,CAACE,IAAI,CAAC,GAAGA,IAAI,GAAGH,WAAW,CAACG,IAAI,CAAC;EAC5DG,KAAK,CAACC,KAAK,CAACR,0BAA0B,CAAC,EAAE,EAAEO,KAAK,EAAEF,EAAE,EAAEC,UAAU,CAAC,CAAC;EAClE,OAAO;IACHG,IAAI,EAAE,MAAMF,KAAK,CAACE,IAAI,EAAE;IACxBC,WAAW,EAAE,MAAMH,KAAK,CAACG,WAAW;EACxC,CAAC;AACL;AAEA,SAASP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}